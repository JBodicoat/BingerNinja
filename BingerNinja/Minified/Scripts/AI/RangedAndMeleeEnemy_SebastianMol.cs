using UnityEngine;class RangedAndMeleeEnemy_SebastianMol :  MeleeEnemy_SebastianMol{public GameObject m_aimer;public GameObject m_projectile;public float m_shootDeley;public float m_projectileSpeed;public int m_RangedAttackRandomChance;public float m_rangedAttackRange = 3;public float m_meleeAttackRange = 1;private int m_randomChanceOfRangedAttack;private bool m_generateRandomNumberOnce = false;private int m_randAttackChance;public float m_chargeAttackRangeTadashi = 10;public float m_rangedAttackRangeTadashi = 3;public float m_meleeAttackRangeTadashi = 1;public GameObject m_normalAttackColider;public GameObject m_chargeAttackColider;public GameObject[] m_tadashiProjectiles;public SpriteRenderer m_ProjectileDisplay;public GameObject m_tadashiNormalPorjectile;private int m_RandChanceAttackTadashi;private float m_RandChanceAttackTadashiFloat;private bool m_generateRandomNumberOnceTadashi = false;private GameObject m_currentProjectile = null;private int m_tadashiMultiShotCounter = 0;private int m_tadashiMultiShotCounterMax = 3;private float m_tadashiLastFaseAttackRand;private float m_attackRangeeAfterCharge;internal override void AttackBehaviour(){if(m_currentEnemyType == m_enemyType.ALIEN || m_currentEnemyType == m_enemyType.NORMAL){if (m_randAttackChance == m_RangedAttackRandomChance - 1){if (EnemyAttacks_SebastianMol.RangedAttack(GetComponent<Enemy_Animation_LouieWilliamson>(), m_playerTransform, transform, m_aimer,ref m_attackTimer, m_projectile, m_shootDeley)){m_generateRandomNumberOnce = false;}}else {if (EnemyAttacks_SebastianMol.MelleAttack(ref m_attackTimer, m_hasChargeAttack, m_chargAttackPosibility,QuickAttack, ChargeAttack, StunAfterAttack,m_currentEnemyType, m_hitSpeed, GetComponent<Enemy_Animation_LouieWilliamson>())){m_generateRandomNumberOnce = false;}}}if (m_currentEnemyType == m_enemyType.TADASHI){if(m_tadashiPhase == 1){if (m_RandChanceAttackTadashi == 0){TadashiChargeAttack();}else {TadashiQuickAttack();}}else if(m_tadashiPhase == 2){GameObject[] allLights = GameObject.FindGameObjectsWithTag(Tags_JoaoBeijinho.m_lightTag);foreach (var light in allLights){light.SetActive(false);}if (m_RandChanceAttackTadashiFloat > 0.3f){TadashiCrazyRangeAttack();}else {TadashiTripleShot();}}else if (m_tadashiPhase == 3){GameObject[] allPlants = GameObject.FindGameObjectsWithTag(Tags_JoaoBeijinho.m_plant);foreach (var plant in allPlants){plant.SetActive(false);}if (m_tadashiLastFaseAttackRand < 0.33f){TadashiQuickAttack();}else if (m_tadashiLastFaseAttackRand < 0.66f){TadashiChargeAttack();}else if (m_tadashiLastFaseAttackRand >= 0.66f){TadashiCrazyRangeAttack();}}}}private void TadashiTripleShot(){if (m_tadashiMultiShotCounter < m_tadashiMultiShotCounterMax){m_ProjectileDisplay.sprite = null;m_currentProjectile = m_tadashiNormalPorjectile;if (EnemyAttacks_SebastianMol.RangedAttack(GetComponent<Enemy_Animation_LouieWilliamson>(), m_playerTransform, transform, m_aimer,ref m_attackTimer, m_currentProjectile, 0.3f)){m_tadashiMultiShotCounter++;m_attackTimer = 0.1f;}}else {m_tadashiMultiShotCounter = 0;m_attackTimer = m_shootDeley;m_generateRandomNumberOnceTadashi = false;m_currentProjectile = null;}}private void TadashiQuickAttack(){if (EnemyAttacks_SebastianMol.MelleAttack(ref m_attackTimer, m_hasChargeAttack, m_chargAttackPosibility,QuickAttack, ChargeAttack, StunAfterAttack,m_currentEnemyType, m_hitSpeed, GetComponent<Enemy_Animation_LouieWilliamson>())){m_generateRandomNumberOnceTadashi = false;}}private void TadashiChargeAttack(){if (EnemyAttacks_SebastianMol.ChargeAttack(m_playerTransform, ref m_attackTimer,m_attackCollider, m_hitSpeed, gameObject, m_chargeAttackSpeed))m_generateRandomNumberOnceTadashi = false;}private void TadashiCrazyRangeAttack(){if (m_currentProjectile){if (EnemyAttacks_SebastianMol.RangedAttack(GetComponent<Enemy_Animation_LouieWilliamson>(), m_playerTransform, transform, m_aimer,ref m_attackTimer, m_currentProjectile, m_shootDeley)){m_generateRandomNumberOnceTadashi = false;m_currentProjectile = null;}}}private void TadashiQuickAttackSetUp(){m_attackRange = m_meleeAttackRangeTadashi;m_attackCollider = m_normalAttackColider;if(m_chargeAttackColider) m_chargeAttackColider.SetActive(false);m_ProjectileDisplay.sprite = null;m_generateRandomNumberOnceTadashi = true;m_attackTimer = m_hitSpeed;m_attackRangeeAfterCharge = m_meleeAttackRangeTadashi;}private void TadashiChargeAttackSetUp(){m_attackRange = m_chargeAttackRangeTadashi;m_attackCollider = m_chargeAttackColider;if (m_normalAttackColider) m_normalAttackColider.SetActive(false);m_ProjectileDisplay.sprite = null;m_generateRandomNumberOnceTadashi = true;m_attackTimer = m_chargeAttackDeley;m_attackRangeeAfterCharge = m_chargeAttackRangeTadashi;}private void TadashiCrazyRangeAttackSetUp(){m_attackRange = m_rangedAttackRange;m_attackCollider = m_normalAttackColider;m_RandChanceAttackTadashiFloat = Random.Range(0.0f, 1.0f);m_generateRandomNumberOnceTadashi = true;m_attackTimer = m_shootDeley;m_attackRangeeAfterCharge = m_rangedAttackRange;if (!m_currentProjectile){int rand = Random.Range(0, 4);switch (rand){case 0:m_projectile = m_tadashiProjectiles[0];break;case 1:m_projectile = m_tadashiProjectiles[1];break;case 2:m_projectile = m_tadashiProjectiles[2];break;case 3:m_projectile = m_tadashiProjectiles[3];break;}m_ProjectileDisplay.sprite = m_projectile.GetComponent<SpriteRenderer>().sprite;m_ProjectileDisplay.color = m_projectile.GetComponent<SpriteRenderer>().color;m_currentProjectile = m_projectile;}}private void UpdateTadashi(){    if(m_currentEnemyType == m_enemyType.TADASHI)switch (m_tadashiPhase){case 1:if (!m_generateRandomNumberOnceTadashi){m_RandChanceAttackTadashi = Random.Range(0, 2);m_generateRandomNumberOnceTadashi = true;if (m_RandChanceAttackTadashi == 0){TadashiChargeAttackSetUp();}else {TadashiQuickAttackSetUp();}}break;case 2:if (!m_generateRandomNumberOnceTadashi){TadashiCrazyRangeAttackSetUp();}break;case 3:if(!m_generateRandomNumberOnceTadashi){m_currentProjectile = null;m_ProjectileDisplay.sprite = null;m_tadashiLastFaseAttackRand = Random.Range(0.0f, 1.0f);if (m_tadashiLastFaseAttackRand < 0.33f){TadashiQuickAttackSetUp();}else if (m_tadashiLastFaseAttackRand < 0.66f){TadashiChargeAttackSetUp();}else if (m_tadashiLastFaseAttackRand > 0.66f){TadashiCrazyRangeAttackSetUp();}}break;}WalkAwayFromWallBasedOnRange(m_attackRangeeAfterCharge);}private void WalkAwayFromWallBasedOnRange(float range){if (!m_isStuned)if (m_doMoveAwayFromWallOnce)SC(MoveAwayFromeWall(m_amountOfTimeToMoveAwayFromWall, range));}private void UpdateAttackAlien(){if(m_currentEnemyType == m_enemyType.ALIEN || m_currentEnemyType == m_enemyType.NORMAL){if (!m_generateRandomNumberOnce){m_randAttackChance = Random.Range(0, m_RangedAttackRandomChance);m_generateRandomNumberOnce = true;}if (m_randAttackChance == m_RangedAttackRandomChance - 1){m_attackRange = m_rangedAttackRange;}else {m_attackRange = m_meleeAttackRange;}if (!m_isStuned)if (m_doMoveAwayFromWallOnce){SC(MoveAwayFromeWall(m_amountOfTimeToMoveAwayFromWall));}}}private void LateUpdate(){UpdateAttackAlien();UpdateTadashi();}}