using System.Collections;using System.Collections.Generic;using UnityEngine;class MeleeEnemy_SebastianMol : BaseEnemy_SebastianMol{public float m_hitSpeed;public GameObject m_attackCollider;public float attackDeactivationSpeed;public bool m_hasChargeAttack = false;public float m_chargeAttackDeley;public int m_chargAttackPosibility;public float m_chargeAttackMultiplier = 3;public float m_afterAttackDeley;public float m_maxChargTimeBeforDamege = 0.2f;public float m_amountOfTimeToMoveAwayFromWall = 0.2f;public float m_chargeAttackSpeed = 500;private bool A = true;public bool showPathBeforAttackTigerBoss = false;private Pathfinder_SebastianMol ab;private List<Vector2Int> ac;protected bool m_doStunOnce = false;protected bool m_doMoveAwayFromWallOnce = false;protected IEnumerator QuickAttackCo(){m_attackCollider.GetComponent<EnemyDamager_SebastianMol>().m_damage= m_attackCollider.GetComponent<EnemyDamager_SebastianMol>().m_baseDamage;m_attackCollider.SetActive(true);yield return new WaitForSeconds(attackDeactivationSpeed);}protected IEnumerator ChargeAttackCo(){yield return new WaitForSeconds(m_chargeAttackDeley);EnemyDamager_SebastianMol dameger = m_attackCollider.GetComponent<EnemyDamager_SebastianMol>();dameger.m_damage = dameger.m_baseDamage * m_chargeAttackMultiplier;m_attackCollider.SetActive(true);yield return new WaitForSeconds(attackDeactivationSpeed);}protected void QuickAttack(){SC(QuickAttackCo());}protected void ChargeAttack(){SC(ChargeAttackCo());}protected void StunAfterAttack(){StunEnemyWithDeleyFunc(m_afterAttackDeley);}internal override void AttackBehaviour(){if(m_currentEnemyType == m_enemyType.PETTIGER){EnemyAttacks_SebastianMol.ChargeAttack(m_playerTransform, ref m_attackTimer,m_attackCollider, m_hitSpeed, gameObject, m_chargeAttackSpeed);}else {EnemyAttacks_SebastianMol.MelleAttack(ref m_attackTimer, m_hasChargeAttack, m_chargAttackPosibility, QuickAttack,ChargeAttack, StunAfterAttack, m_currentEnemyType, m_hitSpeed, GetComponent<Enemy_Animation_LouieWilliamson>());}}protected IEnumerator MoveAwayFromeWall(float amaountOfTime, float attackRange = 0){yield return new WaitForSeconds(amaountOfTime);if (m_attackRange != m_maxAttackRange ){if( attackRange == 0){m_attackRange = m_maxAttackRange;}else {m_attackRange = attackRange;}}m_doMoveAwayFromWallOnce = false;}void LateUpdate(){if(m_currentEnemyType == m_enemyType.SPACENINJABOSS){if ((m_health / m_maxHealth) > m_secondPhaseStartPercentage)if (FOT<PlayerStealth_JoaoBeijinho>().IsStealthed()){if (!m_doStunOnce){StunEnemyWithDeleyFunc(m_amountOfStunWhenPlayerStealthed);m_doStunOnce = true;}}else {m_doStunOnce = false;}}if(!m_isStuned)if(m_doMoveAwayFromWallOnce){SC(MoveAwayFromeWall(m_amountOfTimeToMoveAwayFromWall));}}protected void OnTriggerEnter2D(Collider2D a){if(a.gameObject.tag != Tags_JoaoBeijinho.m_enemyTag && a.gameObject.tag != "Untagged"){if (m_currentEnemyType == m_enemyType.PETTIGER || m_currentEnemyType == m_enemyType.TADASHI){Rigidbody2D rijy = GetComponent<Rigidbody2D>();if (rijy.bodyType == RigidbodyType2D.Dynamic){rijy.bodyType = RigidbodyType2D.Kinematic;rijy.velocity = Vector2.zero;m_attackCollider.SetActive(false);if (a.gameObject.name == "Walls1_map"){m_attackRange = 0.01f;m_doMoveAwayFromWallOnce = true;StunEnemyWithDeleyFunc(m_afterAttackDeley);}if (a.gameObject.CompareTag(Tags_JoaoBeijinho.m_playerTag)){if (m_currentEnemyType == m_enemyType.PETTIGER || m_tadashiPhase == 1)FOT<EffectManager_MarioFernandes>().AddEffect(new SpeedEffect_MarioFernandes(1, 0));}}}}}}