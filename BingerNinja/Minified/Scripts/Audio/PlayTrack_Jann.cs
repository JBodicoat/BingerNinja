using UnityEngine;public class PlayTrack_Jann : Singleton_Jann<PlayTrack_Jann>{private int SF = 48000;[SerializeField] private TextAsset m_musicOnStart;[SerializeField] private float m_volumeSound = 0.1f;[SerializeField] private float m_volumeMusic = 0.1f;[SerializeField] private bool m_loopMusic;private int pos;private float cf;[SerializeField] private AudioSource[] m_musicAudioSources;[SerializeField] private AudioSource[] m_soundAudioSources;private void Awake(){base.Awake();Cursor.lockState = CursorLockMode.Confined;WT sd = SaveLoadSystem_JamieG.QU();if (!sd.Equals(default(WT))){UpdateMusicVolume(sd.WY);UpdateSfxVolume(sd.WU);}foreach (AudioSource ms in m_musicAudioSources){ms.volume = m_volumeMusic;ms.loop = m_loopMusic;}foreach (AudioSource ss in m_soundAudioSources){ss.volume = m_volumeSound;}}private void Start(){if (m_musicOnStart != null){PlayMusic(m_musicOnStart);}}public void EM(string an){Track_Jann t = LoadTrack(an);AudioClip c = CreateClip(t.n, (float)t.b / 60, t.f[0]);foreach (AudioSource ss in m_soundAudioSources){ss.clip = c;if (!ss.isPlaying){ss.Play();break;}else if(ss.clip.name == t.n){ss.Stop();ss.Play();break;}}}public void PlayMusic(string an){Track_Jann t = LoadTrack(an);for (int i = 0; i < t.f.Length; i++){AudioClip c = CreateClip(t.n, (float) t.b / 60, t.f[i]);m_musicAudioSources[i].clip = c;m_musicAudioSources[i].Play();}}public void PlayMusic(TextAsset tf){Track_Jann t = JsonUtility.FromJson<Track_Jann>(tf.text);t.GenerateFrequencies();for (int i = 0; i < t.f.Length; i++){AudioClip c = CreateClip(t.n, (float) t.b / 60, t.f[i]);m_musicAudioSources[i].clip = c;m_musicAudioSources[i].Play();}}public Track_Jann LoadTrack(string an){TextAsset tf = AudioFiles.GetAudio(an);Track_Jann t = JsonUtility.FromJson<Track_Jann>(tf.text);t.GenerateFrequencies();return t;}private AudioClip CreateClip(string tn, float bps, int[] f){int ls = (int) (SF / bps);float[] d = new float[ls * f.Length];int cl = 0;for (int i = 0; i < f.Length; i++){cf = f[i];AudioClip c = AudioClip.Create("", ls, 1, SF, false, OnAudioRead, OnAudioSetPosition);float[] buffer = new float[c.samples];c.GetData(buffer, 0);buffer.CopyTo(d, cl);cl += c.samples;}AudioClip nc = AudioClip.Create(tn, cl, 1, SF, false);nc.SetData(d, 0);return nc;}void OnAudioRead(float[] d){int c = 0;while (c < d.Length){d[c] = Mathf.Sign(Mathf.Sin(2 * Mathf.PI * cf * pos / SF));pos++;c++;}}void OnAudioSetPosition(int np){pos = np;}public void UpdateMusicVolume(float v){m_volumeMusic = v;foreach (var source in m_musicAudioSources){source.volume = v / 30f;}}public void UpdateSfxVolume(float v){m_volumeSound = v;foreach (var source in m_soundAudioSources){source.volume = v / 50f;}}}