using UnityEngine;using UnityEngine.SceneManagement;using UnityEngine.Tilemaps;public class LevelScripting : M{internal bool enemyDead = false, keyUsed = false, levelBossIntro, bossDead = false, doorsClosed = false, cinematicDone = true, ventDialogueDisabled = false, endVentDialogueCanPlay = false, drawFreezer = false;private GameObject levelLiftTrigger, keyTrigger, keyTriggerTwo, doorCloseTrigger, dialogBox, ventsDialogue, endVentDialogue;public GameObject vents;private BaseEnemy_SebastianMol boss, boss2, level2Enemy1, level2Enemy2;private BossDialogue_MarioFernandes bossDialogue, boss2Dialogue, level2End;private Tilemap objInfWalls, walls1, objBehWalls, walls2;public Tile bottomDoorTile, topDoorTile;private int bossDialogIndex = 0, boss2DialogIndex = 0;public int currentLevel;private PlayerController_JamieG controller;private BossIntroCineScript_AdamG cinematics;private Timeline_Script timeline;private float cinematicsTimer;private WeaponUI_LouieWilliamson wpnUI;private void Awake(){currentLevel = SceneManager.GetActiveScene().buildIndex;controller = F("Player").GetComponent<PlayerController_JamieG>();switch (currentLevel){case 1:{keyTrigger = F("Key Trigger");walls1 = F("Walls1_Map").GetComponent<Tilemap>();walls2 = F("Walls2_Map").GetComponent<Tilemap>();}break;case 2:{level2End = F("EndLevelTwo").GetComponent<BossDialogue_MarioFernandes>();level2Enemy1 = F("Enemy 1").GetComponent<BaseEnemy_SebastianMol>();level2Enemy2 = F("Enemy 2").GetComponent<BaseEnemy_SebastianMol>();levelLiftTrigger = F("Level 2 Lift");}break;case 3:{boss = FT("Enemy").GetComponent<BaseEnemy_SebastianMol>();bossDialogue = FT("Enemy").GetComponent<BossDialogue_MarioFernandes>();levelLiftTrigger = F("Level 3 Lift");}break;case 4:{keyTrigger = F("Key Trigger");walls1 = F("Walls1_map").GetComponent<Tilemap>();objInfWalls = F("ObjectsInFrontOfWalls_map").GetComponent<Tilemap>();walls2 = F("Walls2_map").GetComponent<Tilemap>();}break;case 5:{keyTrigger = F("Key Trigger");levelLiftTrigger = F("Level 5 Lift");ventsDialogue = F("Vents");endVentDialogue = F("Exit Vent");}break;case 6:{boss = FT("Enemy").GetComponent<BaseEnemy_SebastianMol>();bossDialogue = FT("Enemy").GetComponent<BossDialogue_MarioFernandes>();levelLiftTrigger = F("Level 6 Lift");walls1 = F("Walls1_map").GetComponent<Tilemap>();walls2 = F("Walls2_map").GetComponent<Tilemap>();}break;case 7:{keyTrigger = F("Key Trigger");levelLiftTrigger = F("Level 7 Lift");}break;case 8:{keyTrigger = F("Key Trigger");keyTriggerTwo = F("Key Trigger 2");walls1 = F("Walls1_map").GetComponent<Tilemap>();objInfWalls = F("ObjectsInFrontOfWalls_map").GetComponent<Tilemap>();objBehWalls = F("ObjectsBehindWalls_map").GetComponent<Tilemap>();walls2 = F("Walls2_map").GetComponent<Tilemap>();}break;case 9:{boss = FT("Enemy").GetComponent<BaseEnemy_SebastianMol>();bossDialogue = FT("Enemy").GetComponent<BossDialogue_MarioFernandes>();levelLiftTrigger = F("Level 9 Lift");}break;case 11:{keyTrigger = F("Key Trigger");walls1 = F("Walls1_map").GetComponent<Tilemap>();walls2 = F("Walls2_map").GetComponent<Tilemap>();}break;case 12:{boss = F("Yakuza Leader").GetComponent<BaseEnemy_SebastianMol>();bossDialogue = F("Yakuza Leader").GetComponent<BossDialogue_MarioFernandes>();levelLiftTrigger = F("Level 12 Lift");cinematics = F("BossIntroCinematic").GetComponent<BossIntroCineScript_AdamG>();}break;case 13:{keyTrigger = F("Key Trigger");walls1 = F("Walls1_map").GetComponent<Tilemap>();walls2 = F("Walls2_map").GetComponent<Tilemap>();}break;case 14:{levelLiftTrigger = F("Level 14 Lift");keyTrigger = F("Real Key");doorCloseTrigger = F("DialogTrigger");walls1 = F("Walls1_map").GetComponent<Tilemap>();walls2 = F("Walls2_map").GetComponent<Tilemap>();bottomDoorTile = walls1.GetTile<Tile>(new Vector3Int(12, 26, 0));topDoorTile = walls2.GetTile<Tile>(new Vector3Int(13, 27, 0));}break;case 15:{boss = F("Toby the Tiger").GetComponent<BaseEnemy_SebastianMol>();bossDialogue = F("Toby the Tiger").GetComponent<BossDialogue_MarioFernandes>();levelLiftTrigger = F("Level 15 Lift");}break;case 17:{levelLiftTrigger = F("Level 17 Lift");keyTrigger = F("Key");walls1 = F("Walls1_map").GetComponent<Tilemap>();walls2 = F("Walls2_map").GetComponent<Tilemap>();}break;case 18:{boss = F("Space Ninja").GetComponent<BaseEnemy_SebastianMol>();bossDialogue = F("Space Ninja").GetComponent<BossDialogue_MarioFernandes>();levelLiftTrigger = F("Level 18 Lift");dialogBox = F("DialogBox");walls1 = F("Walls1_map").GetComponent<Tilemap>();walls2 = F("Walls2_map").GetComponent<Tilemap>();}break;case 19:{levelLiftTrigger = F("Level 19 Lift");keyTrigger = F("Key Trigger");walls1 = F("Walls1_map").GetComponent<Tilemap>();walls2 = F("Walls2_map").GetComponent<Tilemap>();}break;case 20:{boss = F("Ninjaroth").GetComponent<BaseEnemy_SebastianMol>();boss2 = F("Tadashi").GetComponent<BaseEnemy_SebastianMol>();bossDialogue = F("Ninjaroth").GetComponent<BossDialogue_MarioFernandes>();boss2Dialogue = F("Tadashi").GetComponent<BossDialogue_MarioFernandes>();dialogBox = F("DialogBox");levelLiftTrigger = F("Level 20 Lift");timeline = F("Cinematics").GetComponent<Timeline_Script>();}break;default:break;}}private void Start(){switch (currentLevel){case 2:{levelLiftTrigger.SetActive(false);}break;case 3:{levelLiftTrigger.SetActive(false);}break;case 5:{levelLiftTrigger.SetActive(false);endVentDialogue.SetActive(false);}break;case 6:{levelLiftTrigger.SetActive(false);}break;case 7:{levelLiftTrigger.SetActive(false);}break;case 9:{levelLiftTrigger.SetActive(false);}break;case 12:{levelLiftTrigger.SetActive(false);}break;case 14:{levelLiftTrigger.SetActive(false);walls1.SetTile(new Vector3Int(12, 26, 0), null);walls1.SetTile(new Vector3Int(12, 25, 0), null);walls1.SetTile(new Vector3Int(12, 24, 0), null);walls2.SetTile(new Vector3Int(13, 27, 0), null);walls2.SetTile(new Vector3Int(13, 26, 0), null);walls2.SetTile(new Vector3Int(13, 25, 0), null);}break;case 15:{levelLiftTrigger.SetActive(false);}break;case 18:{boss = F("Space Ninja").GetComponent<BaseEnemy_SebastianMol>();bossDialogue = F("Space Ninja").GetComponent<BossDialogue_MarioFernandes>();levelLiftTrigger = F("Level 18 Lift");dialogBox = F("DialogBox");levelBossIntro = false;levelLiftTrigger.SetActive(false);}break;case 20:levelLiftTrigger.SetActive(false);break;default:break;}wpnUI = F("WeaponsUI").GetComponent<WeaponUI_LouieWilliamson>();}private void Update(){if (controller.m_changeLevel.triggered){SceneManager_JamieG.Instance.LoadNextLevel();}switch (currentLevel){case 1:{if(!keyUsed){if (!keyTrigger.activeInHierarchy){wpnUI.setKey(false);walls2.SetTile(new Vector3Int(6, 13, 0), null);walls2.SetTile(new Vector3Int(5, 13, 0), null);walls2.SetTile(new Vector3Int(4, 13, 0), null);walls1.SetTile(new Vector3Int(3, 12, 0), null);walls1.SetTile(new Vector3Int(4, 12, 0), null);walls1.SetTile(new Vector3Int(5, 12, 0), null);keyUsed = true;}}}break;case 2:{if(!enemyDead){if (level2Enemy1.m_health <= 0 || level2Enemy2.m_health <= 0){levelLiftTrigger.SetActive(true);level2End.TriggerDialogue(0);enemyDead = true;}}}break;case 3:{if(!bossDead){if (!levelBossIntro){bossDialogue.TriggerDialogue(0);levelBossIntro = true;}if (boss.m_health <= 0){bossDialogue.TriggerDialogue(1);levelLiftTrigger.SetActive(true);bossDead = true;}}}break;case 4:{if(!keyUsed){if (!keyTrigger.activeInHierarchy){wpnUI.setKey(false);keyUsed = true;walls2.SetTile(new Vector3Int(25, 11, 0), null);walls2.SetTile(new Vector3Int(25, 10, 0), null);walls2.SetTile(new Vector3Int(25, 9, 0), null);walls1.SetTile(new Vector3Int(24, 9, 0), null);walls1.SetTile(new Vector3Int(24, 10, 0), null);walls1.SetTile(new Vector3Int(24, 8, 0), null);}}}break;case 5:{if(!keyUsed){if (!keyTrigger.activeInHierarchy){wpnUI.setKey(false);keyUsed = true;levelLiftTrigger.SetActive(true);}}if(!vents.activeInHierarchy && !endVentDialogue.activeInHierarchy){endVentDialogue.SetActive(true);}}break;case 6:{if(!bossDead){if (!levelBossIntro){bossDialogue.TriggerDialogue(0);levelBossIntro = true;}if (boss.m_health <= 0){bossDialogue.TriggerDialogue(1);levelLiftTrigger.SetActive(true);bossDead = true;}}if(!drawFreezer){walls2.SetTile(new Vector3Int(23, 10, 0), null);walls2.SetTile(new Vector3Int(23, 9, 0), null);walls2.SetTile(new Vector3Int(23,8, 0), null);walls2.SetTile(new Vector3Int(22, 7, 0), null);walls2.SetTile(new Vector3Int(22, 8, 0), null);walls2.SetTile(new Vector3Int(22, 9, 0), null);}else if (drawFreezer){walls2.SetTile(new Vector3Int(23, 10, 0),topDoorTile);walls2.SetTile(new Vector3Int(23, 9, 0), topDoorTile);walls2.SetTile(new Vector3Int(23, 8, 0), topDoorTile);walls2.SetTile(new Vector3Int(22, 7, 0), bottomDoorTile);walls2.SetTile(new Vector3Int(22, 8, 0), bottomDoorTile);walls2.SetTile(new Vector3Int(22, 9, 0), bottomDoorTile);}}break;case 7:{if (!keyTrigger.activeInHierarchy && !keyUsed){levelLiftTrigger.SetActive(true);keyUsed = true;}}break;case 8:{if(!keyUsed){if (!keyTrigger.activeInHierarchy){walls2.SetTile(new Vector3Int(22, 28, 0), null);walls2.SetTile(new Vector3Int(22, 29, 0), null);walls2.SetTile(new Vector3Int(22, 27, 0), null);walls1.SetTile(new Vector3Int(21, 27, 0), null);walls1.SetTile(new Vector3Int(21, 28, 0), null);walls1.SetTile(new Vector3Int(21, 26, 0), null);}if (!keyTriggerTwo.activeInHierarchy){walls2.SetTile(new Vector3Int(29, 10, 0), null);walls2.SetTile(new Vector3Int(29, 11, 0), null);walls2.SetTile(new Vector3Int(29, 9, 0), null);walls1.SetTile(new Vector3Int(28, 9, 0), null);walls1.SetTile(new Vector3Int(28, 10, 0), null);walls1.SetTile(new Vector3Int(28, 8, 0), null);}}}break;case 9:{if(!bossDead){if (!levelBossIntro){bossDialogue.TriggerDialogue(0);levelBossIntro = true;}if (boss.m_health <= 0){bossDialogue.TriggerDialogue(1);levelLiftTrigger.SetActive(true);bossDead = true;}}}break;case 11:{if(!keyUsed){if (!keyTrigger.activeInHierarchy){wpnUI.setKey(false);keyUsed = true;walls2.SetTile(new Vector3Int(36, 32, 0), null);walls2.SetTile(new Vector3Int(37, 32, 0), null);walls2.SetTile(new Vector3Int(38, 32, 0), null);walls1.SetTile(new Vector3Int(35, 31, 0), null);walls1.SetTile(new Vector3Int(36, 31, 0), null);walls1.SetTile(new Vector3Int(37, 31, 0), null);walls2.SetTile(new Vector3Int(33, 19, 0), null);walls2.SetTile(new Vector3Int(33, 18, 0), null);walls2.SetTile(new Vector3Int(33, 17, 0), null);walls1.SetTile(new Vector3Int(32, 18, 0), null);walls1.SetTile(new Vector3Int(32, 17, 0), null);walls1.SetTile(new Vector3Int(32, 16, 0), null);walls2.SetTile(new Vector3Int(35, 31, 0), null);walls2.SetTile(new Vector3Int(36, 31, 0), null);walls2.SetTile(new Vector3Int(37, 31, 0), null);walls1.SetTile(new Vector3Int(38, 10, 0), null);walls1.SetTile(new Vector3Int(37, 10, 0), null);walls1.SetTile(new Vector3Int(36, 10, 0), null);walls2.SetTile(new Vector3Int(11, 26, 0), null);walls2.SetTile(new Vector3Int(12, 26, 0), null);walls2.SetTile(new Vector3Int(13, 26, 0), null);walls1.SetTile(new Vector3Int(10, 25, 0), null);walls1.SetTile(new Vector3Int(11, 25, 0), null);walls1.SetTile(new Vector3Int(12, 25, 0), null);}}}break;case 12:{if(!bossDead){if (!levelBossIntro){bossDialogue.TriggerDialogue(0);levelBossIntro = true;}if (boss.m_health <= 0){bossDialogue.TriggerDialogue(1);levelLiftTrigger.SetActive(true);bossDead = true;}}}break;case 13:{if(!keyUsed){if (!keyTrigger.activeInHierarchy){wpnUI.setKey(false);walls2.SetTile(new Vector3Int(33, 17, 0), null);walls2.SetTile(new Vector3Int(34, 17, 0), null);walls2.SetTile(new Vector3Int(35, 17, 0), null);walls1.SetTile(new Vector3Int(34, 16, 0), null);walls1.SetTile(new Vector3Int(33, 16, 0), null);walls1.SetTile(new Vector3Int(32, 16, 0), null);keyUsed = true;}}}break;case 14:{if (!keyTrigger.activeInHierarchy){levelLiftTrigger.SetActive(true);wpnUI.setKey(false);}}break;case 15:{if(!bossDead){if (!levelBossIntro){bossDialogue.TriggerDialogue(0);levelBossIntro = true;}if (boss.m_health <= 0){bossDialogue.TriggerDialogue(1);levelLiftTrigger.SetActive(true);bossDead = true;}}}break;case 16:{}break;case 18:{if(!bossDead){if (!levelBossIntro && !dialogBox.activeInHierarchy){bossDialogue.TriggerDialogue(bossDialogIndex);bossDialogIndex++;if (bossDialogIndex == 8){levelBossIntro = true;}}if (boss.m_health <= 0){bossDialogue.TriggerDialogue(9);levelLiftTrigger.SetActive(true);bossDead = true;}}}break;case 19:{if (!keyUsed){if (!keyTrigger.activeInHierarchy){walls1.SetTile(new Vector3Int(24, 9, 0), null);walls1.SetTile(new Vector3Int(25, 9, 0), null);walls1.SetTile(new Vector3Int(23, 9, 0), null);walls2.SetTile(new Vector3Int(25, 10, 0), null);walls2.SetTile(new Vector3Int(26, 10, 0), null);walls2.SetTile(new Vector3Int(24, 10, 0), null);wpnUI.setKey(false);keyUsed = true;}}}break;case 20:{if(!bossDead){if (!levelBossIntro && !dialogBox.activeInHierarchy){bossDialogue.TriggerDialogue(bossDialogIndex);bossDialogIndex++;if (bossDialogIndex == 14)levelBossIntro = true;}if (boss.m_health <= 0 && !dialogBox.activeInHierarchy){if(timeline.playableDirector != timeline.timeline[1])timeline.ChangeDirector("Bad Ending");bossDialogue.TriggerDialogue(bossDialogIndex);bossDialogIndex++;levelLiftTrigger.SetActive(true);if(bossDialogIndex == 19){bossDead = true;}}else if (boss2 != null)if (boss2.m_health <= 0 && !dialogBox.activeInHierarchy){timeline.ChangeDirector("Good Ending");boss2Dialogue.TriggerDialogue(boss2DialogIndex);boss2DialogIndex++;if (boss2DialogIndex == 8)bossDead = true;levelLiftTrigger.SetActive(true);}}}break;default:break;}}private void OnTriggerEnter2D(Collider2D other){if (currentLevel == 14){if (other.gameObject == doorCloseTrigger && !doorsClosed){walls2.SetTile(new Vector3Int(13, 27, 0), topDoorTile);walls2.SetTile(new Vector3Int(13, 26, 0), topDoorTile);walls2.SetTile(new Vector3Int(13, 25, 0), topDoorTile);walls1.SetTile(new Vector3Int(12, 26, 0), bottomDoorTile);walls1.SetTile(new Vector3Int(12, 25, 0), bottomDoorTile);walls1.SetTile(new Vector3Int(12, 24, 0), bottomDoorTile);doorsClosed = true;}}}}